# LunarAuth plugin config

# Config version. Don't change it!
config-version: "1.4"

# Auth settings
settings:
  # Database provider. Available providers: SQLite3, MySQL, JSON, YAML. I recommend to use SQLite3 for much performance on local. | Default: SQLite3
  provider: "sqlite3"
  # Encrypting passwords. (true - enable, false - disable) I highly recommend keeping it on true due to security reasons. | Algorithm: SHA512
  encrypt: true
  # Data login. (true - enable, false - disable) | Default: true, Available types: IP, clientSecret
  dataLogin:
    enabled: true
    type: "ip"
  # Authorization from chat, not only commands. (true - enable, false - disable) | Default: true
  chatAuth: true
  # Does not allow join from another online player nick. (true - enable, false - disable) | Default: true
  singleAuth: true
  # Does not allow sending passwords in chat when authorized. Works only with chat auth enabled. (true - enable, false - disable) Do not use this with "encrypt" enabled due to server lags | Default: false
  noPasswordsInChat: false
  # Blindness and invisibility effect when not authorized. (true - enable, false - disable) | Default: true
  effects: true
  # Minimal password length. (in symbols) | Default: 3
  minPasswordLength: 3
  # Maximal password length. (in symbols) | Default: 30
  maxPasswordLength: 30
  # Maximal count of login attempts. (invalid password) | Default: 5
  maxLoginAttempts: 5
  # When player is not authorized in your value, server kicks him. (in seconds) | Default: 120
  loginTimeout: 120
  # Interval for auth messages. (in seconds) | Default: 10
  messageInterval: 10

# MySQL auth settings (change provider in settings to "mysql")
mysql:
  # Is MySQL enabled (true - enable, false - disable)
  enabled: false
  # MySQL server IP (127.0.0.1 - localhost)
  ip: "127.0.0.1"
  # MySQL user
  user: "mysql"
  # MySQL user password
  password: "lunarauth_mysql"
  # MySQL database name
  database: "lunarauth"
  # MySQL port
  port: 3306

# Auth events
events:
  # Can player move while not authorized? (true - enable, false - disable) | Default: false
  canMove: false
  # Can player use commands while not authorized? (true - enable, false - disable) | Default: false
  canUseCommands: false
  # Can drop items while not authorized? (true - enable, false - disable) | Default: false
  canDropItems: false
  # Can player interact while not authorized? (true - enable, false - disable) | Default: false
  canInteract: false
  # Can player use consumable items while not authorized? (true - enable, false - disable) | Default: false
  canUseConsumableItems: false
  # Can player pick up experience while not authorized? (true - enable, false - disable) | Default: false
  canPickupExperience: false
  # Can player use beds while not authorized? (true - enable, false - disable) | Default: false
  canUseBeds: false
  # Can player get achievements while not authorized? (true - enable, false - disable) | Default: false
  canGetAchievements: false
  # Can player get exhausted while not authorized? (true - enable, false - disable) | Default: false
  canGetExhausted: false
  # Can player break blocks while not authorized? (true - enable, false - disable) | Default: false
  canBreakBlocks: false
  # Can player place blocks while not authorized? (true - enable, false - disable) | Default: false
  canPlaceBlocks: false
  # Can player be damaged while not authorized? (true - enable, false - disable) | Default: false
  canBeDamaged: false
  # Can player give damage while not authorized? (true - enable, false - disable) | Default: false
  canGiveDamage: false

# Auth messages
messages:
  # This message will be shown on player join. Available tags: {USER} - player's nickname
  joinMessage: "Welcome to the server, {USER}!"
  # This message will be shown when player is need to login.
  userLogin: "Please, authenticate using /login <password>"
  # This message will be shown when player is need to login. (If chat auth enabled)
  userChatLogin: "Please, authenticate with typing your password in chat or using /login!"
  # This message will be shown when player is need to register new account.
  userRegistration: "Please, register using /register <password> <repeat password>"
  # This message will be shown when player is need to register new account. (If chat auth enabled)
  userChatRegistration: "Please, register with typing your password 2 times in chat or using /register!"
  # This message will be shown when player is automatically logged in by his data. (If feature is enabled)
  successfulAuthorization: "You have been already logged in!"
  # This message will be shown when player is logged in by password.
  successfulLogin: "You have been logged in!"
  # This message will be shown when player is registered. Available tags: {PASSWORD} - player's password
  successfulRegistration: "You have been registered! Your password: {PASSWORD}"
  # This message will be shown when player is changed his password. Available tags: {PASSWORD} - player's new password
  successfulPasswordChange: "You have changed your password! New password: {PASSWORD}"
  # This message will be shown on user account removing.
  successfulUserRemove: "You have successfully removed {USER}'s account!"
  # This message will be shown on user info command output. Available tags: {USER}, {PASSWORD}, {IP}, {CLIENTSECRET}, {EOL}
  userInfo: "User: {USER} {EOL}Password: {PASSWORD} {EOL}IP: {IP} {EOL}Client secret: {CLIENTSECRET}"
  # This message will be shown if player is not registered.
  userNotRegistered: "You are not registered!"
  # This message will be shown if user is not registered.
  userNotRegisteredConsole: "User is not registered!"
  # This message will be shown if player is already logged in.
  userAlreadyLoggedIn: "You are already logged in!"
  # This message will be shown if player is already registered.
  userAlreadyRegistered: "You are already registered!"
  # This message will be shown if player has sent incorrect password.
  incorrectPassword: "Incorrect password!"
  # This message will be shown if player's passwords doesn't match.
  passwordsDoesNotMatch: "Passwords does not match!"
  # This message will be shown if player is trying to use forbidden symbols.
  invalidPasswordSymbols: "Invalid symbols!"
  # This message will be shown if player is trying to use password out of allowed length range.
  invalidPasswordLength: "Invalid password length!"

# Auth kicks
kicks:
  # This message will be shown on login timeout kick.
  loginTimeout: "Login timeout"
  # This message will be shown on kick when player hit maximal login attempts
  tooManyLoginAttempts: "Too many login attempts!"
  # This message will be shown on kick when player is trying to join with another player's nick
  userAlreadyOnline: "Player is already online!"

# Auth usages
usages:
  # Usage of /login command.
  login: "Usage: /login <password>"
  # Usage of chat login.
  chatLogin: "Type your password in chat or use /login"
  # Usage of /register command.
  register: "Usage: /register <password> <repeat password>"
  # Usage of chat register.
  chatRegister: "Type your new password 2 times in chat or use /register"
  # Usage of /changepassword command.
  changepassword: "Usage: /changepassword <old password> <new password>"
  # Usage of /removeuser command.
  removeuser: "Usage: /removeuser <nick>"
  # Usage of /userinfo command.
  userinfo: "Usage: /userinfo <nick>"
  # Usage of /lunarauth command.
  default: "Usage: /lunarauth <help|info>"

# Plugin was made with <3 by Lunarelly (https://github.com/Lunarelly)